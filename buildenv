# bump: libgdbm-version /LIBGDBM_VERSION="(.*)"/ https://ftp.gnu.org/gnu/gdbm/|re:/gdbm-([\d.]+).tar.gz/$1/|semver:*
LIBGDBM_VERSION="1.23"

export ZOPEN_STABLE_URL="https://ftp.gnu.org/gnu/gdbm/gdbm-${LIBGDBM_VERSION}.tar.gz"
export ZOPEN_CATEGORIES="library"
export ZOPEN_STABLE_DEPS="git make libtool coreutils zoslib"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_COMP=CLANG
export ZOPEN_CHECK="../tests/chkver.sh" 
export ZOPEN_EXTRA_CPPFLAGS="-D_EXT"

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lgdbm"
fi
ZZ
}

zopen_check_results()
{
chk="$1/$2_check.log"

successes=$(grep -E "ok$" ${chk} | wc -l)
failures=$(grep -E "Failed$" ${chk} | wc -l)
totalTests="$((successes+failures))"

cat <<ZZ
  actualFailures:$failures
  totalTests:$totalTests
  expectedFailures:1
ZZ
}

zopen_get_version()
{
  grep "PACKAGE_VERSION" configure | head -1 | awk -F"=" '{print $2}' | awk '{gsub(/[^0-9.]/ , ""); print}'
}
